//https://www.instructables.com/id/Arduino-LeonardoMicro-as-Game-ControllerJoystick/
//https://github.com/MHeironimus/ArduinoJoystickLibrary/tree/version-2.0


#include <Joystick.h>

#define B_triangle 2
#define B_circle 3
#define B_x 4
#define B_square 5

#define B_up 6
#define B_down 7
#define B_left 8
#define B_right 9

#define B_r1 99
#define B_r2 98

#define B_l1 97
#define B_l2 96

#define B_start 13
#define B_select 12


Joystick_ Joystick[1] = {
  Joystick_(0x03, JOYSTICK_TYPE_GAMEPAD, 
  14, 1,  
  true, true, false, //X Y Z
  true, true, false, //Rx Ry Rz
  false, false,      //Rudder throttle
  false, false, false) //accel brake steer
//  Joystick_(0x04, JOYSTICK_TYPE_JOYSTICK, 0, 0, true, true, true, true, false, false, false, false, false, false, false),
};


int HatY = 2;
int HatX = 2;

void setup() {
//init joystick
Joystick[0].setXAxisRange(-127, 127);
Joystick[0].setYAxisRange(-127, 127);

Joystick[0].setRxAxisRange(-127, 127);
Joystick[0].setRyAxisRange(-127, 127);

Joystick[0].begin();
  
  // Initialize Button Pins
  pinMode(B_triangle, INPUT_PULLUP);
  pinMode(B_circle, INPUT_PULLUP);
  pinMode(B_x, INPUT_PULLUP);
  pinMode(B_square, INPUT_PULLUP);

  pinMode(B_up, INPUT_PULLUP);
  pinMode(B_down, INPUT_PULLUP);
  pinMode(B_left, INPUT_PULLUP);
  pinMode(B_right, INPUT_PULLUP);

  pinMode(B_start, INPUT_PULLUP);
  pinMode(B_select, INPUT_PULLUP);

}

void loop() {

//action cluster
  if (digitalRead(B_x) == HIGH) {
    Joystick[0].setButton(0, 1);
  }else {
    Joystick[0].setButton(0, 0);
  }

  if (digitalRead(B_circle) == HIGH) {
    Joystick[0].setButton(1, 1);
  }else {
    Joystick[0].setButton(1, 0);
  }

  if (digitalRead(B_square) == HIGH) {
    Joystick[0].setButton(2, 1);
  }else {
    Joystick[0].setButton(2, 0);
  }

  if (digitalRead(B_triangle) == HIGH) {
    Joystick[0].setButton(3, 1);
  }else {
    Joystick[0].setButton(3, 0);
  }


//option cluster
  if (digitalRead(B_start) == HIGH) {
    Joystick[0].setButton(7, 1);
  }else {
    Joystick[0].setButton(7, 0);
  }

  if (digitalRead(B_select) == HIGH) {
    Joystick[0].setButton(6, 1);
  }else {
    Joystick[0].setButton(6, 0);
  }



//D-pad
  if (digitalRead(B_up) == LOW) {
    if (digitalRead(B_up) == LOW) {
      HatY = 2;
      }else {
        HatY = 1;
        }
  } else 
  HatY = 3;
  }


  if (digitalRead(B_up) == HIGH) {
    HatY = 3;
  } else if (digitalRead(B_down) == HIGH) {
    HatY = 1;
  } else {
    HatY = 2;
  }

  if (digitalRead(B_left) == HIGH) {
   HatX = 3;
  } else if (digitalRead(B_right) == HIGH) {
    HatX = 1;
  } else {
    HatX = 2;
  }

  
  Joystick[0].setYAxis(map(analogRead(A0), 0, 1023, 127, -127));
  Joystick[0].setXAxis(map(analogRead(A1), 0, 1023, 127, -127));
  
  Joystick[0].setRyAxis(map(analogRead(A0), 0, 1023, 127, -127));
  Joystick[0].setRxAxis(map(analogRead(A1), 0, 1023, 127, -127));


//d-pad
   if(HatY == 2 && HatX == 2 ){
      Joystick[0].setHatSwitch(0, -1);
     } else if(HatY > 2 && HatX == 2 ){
      Joystick[0].setHatSwitch(0, 0);
     } else if(HatY > 2 && HatX < 2 ){
      Joystick[0].setHatSwitch(0, 45);
     }  else if(HatY == 2 && HatX < 2 ){
      Joystick[0].setHatSwitch(0, 90);
     } else if(HatY < 2 && HatX < 2 ){
      Joystick[0].setHatSwitch(0, 135);
     } else if(HatY < 2 && HatX == 2 ){
      Joystick[0].setHatSwitch(0, 180);
     } else if(HatY < 2 && HatX > 2 ){
      Joystick[0].setHatSwitch(0, 225);
     } else if(HatY == 2 && HatX > 2 ){
      Joystick[0].setHatSwitch(0, 270);
     } else if(HatY > 2 && HatX > 2 ){
      Joystick[0].setHatSwitch(0, 315);
     } else if(HatY > 2 && HatX > 2 ){
      Joystick[0].setHatSwitch(0, 360);
     }

}
